#!/usr/bin/env node

const http = require('http')

const lib = require('../lib')

const config = JSON.parse(process.env['STATUS_AGGREGATOR_CONFIG'])

const server = http.createServer((req, res) => {
	if (req.url === '/status' && req.method === 'GET') {
		Promise.all(config.upstreamUrls.map(lib.getUrlStatus))
		.then((statuses) => {
			res.statusCode = lib.getAggregateStatus(statuses)
			res.setHeader('Content-Type', 'application/json')
			res.end(JSON.stringify({
				upstream: statuses.map((status, i) => ({
					status: status,
					url: config.upstreamUrls[i],
				}))
			}))
		})
		.catch((error) => {
			console.log(error)
			res.statusCode = 503
			res.end()
		})
	} else {
		res.statusCode = 404
		res.end()
	}
})

server.listen(80, '0.0.0.0', () => {
	console.log('Listening ...')
})
